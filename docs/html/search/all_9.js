var searchData=
[
  ['abbreviations_0',['Allowed Acronyms and Abbreviations',['../index.html#autotoc_md34',1,'']]],
  ['accelerometer_1',['Accelerometer',['../classAccelerometer.html',1,'']]],
  ['acronyms_20and_20abbreviations_2',['Allowed Acronyms and Abbreviations',['../index.html#autotoc_md34',1,'']]],
  ['add_20flag_20list_20to_20parser_3',['4. Add flag list to Parser',['../C:/Users/patri/Documents/Software/nuli-avionics-flight-software/platformio_nuli_avionics_flight_software/src/core/cli/README.md#autotoc_md9',1,'']]],
  ['add_20flags_20to_20list_20of_20flags_4',['3. Add Flags to list of flags',['../C:/Users/patri/Documents/Software/nuli-avionics-flight-software/platformio_nuli_avionics_flight_software/src/core/cli/README.md#autotoc_md8',1,'']]],
  ['addflaggroup_5',['addFlagGroup',['../classParser.html#abe4ff3e3ab2bbe35be3053c3510d37f2',1,'Parser::addFlagGroup(BaseFlag *(&amp;flagGroup)[n])'],['../classParser.html#a767d754c7d139efbeaed6664b91c069a',1,'Parser::addFlagGroup(BaseFlag *(&amp;flagGroup)[n], int8_t uid)']]],
  ['allowed_20acronyms_20and_20abbreviations_6',['Allowed Acronyms and Abbreviations',['../index.html#autotoc_md34',1,'']]],
  ['allowing_20for_20the_20type_20name_20to_20be_20injected_20into_20the_20method_20names_7',['works as string concatenation in macros, allowing for the type name to be injected into the method names',['../HardwareAbstraction_8h.html#autotoc_md19',1,'']]],
  ['altitudekf_8',['AltitudeKf',['../classAltitudeKf.html',1,'']]],
  ['altitudem_9',['altitudeM',['../structCoordinates__s.html#ac6bcaea2c6149745c65500d67cca5ee3',1,'Coordinates_s']]],
  ['and_20abbreviations_10',['Allowed Acronyms and Abbreviations',['../index.html#autotoc_md34',1,'']]],
  ['and_20functions_11',['Structs, Enums, Typedefs and Functions',['../index.html#autotoc_md38',1,'']]],
  ['aprsmodulation_12',['AprsModulation',['../classAprsModulation.html',1,'']]],
  ['aprstransmitter_13',['AprsTransmitter',['../classAprsTransmitter.html',1,'']]],
  ['arduinofram_14',['ArduinoFram',['../classArduinoFram.html',1,'']]],
  ['arduinopyro_15',['ArduinoPyro',['../classArduinoPyro.html',1,'ArduinoPyro'],['../classArduinoPyro.html#ad2b6314479e5d28ae1a8fda0bcb32ca6',1,'ArduinoPyro::ArduinoPyro()']]],
  ['arduinosystemclock_16',['ArduinoSystemClock',['../classArduinoSystemClock.html',1,'']]],
  ['arduinovoltagesensor_17',['ArduinoVoltageSensor',['../classArduinoVoltageSensor.html',1,'']]],
  ['argumentflag_18',['ArgumentFlag',['../classArgumentFlag.html',1,'ArgumentFlag&lt; T &gt;'],['../classArgumentFlag.html#a7ceaf37fbc50cc453c6e00904617fc20',1,'ArgumentFlag::ArgumentFlag(const char *name, T defaultValue, const char *helpText, bool m_required, uint8_t uid, const std::function&lt; void(void)&gt; &amp;callback)'],['../classArgumentFlag.html#a9adbb5b6dcc63368dafae6cdd3d4a7af',1,'ArgumentFlag::ArgumentFlag(const char *name, const char *helpText, bool m_required, uint8_t uid, const std::function&lt; void(void)&gt; &amp;callback)']]],
  ['argumentflag_3c_20config_5ftype_5ft_20_3e_19',['ArgumentFlag&lt; config_type_t &gt;',['../classArgumentFlag.html',1,'']]],
  ['as_20string_20concatenation_20in_20macros_20allowing_20for_20the_20type_20name_20to_20be_20injected_20into_20the_20method_20names_20',['works as string concatenation in macros, allowing for the type name to be injected into the method names',['../HardwareAbstraction_8h.html#autotoc_md19',1,'']]],
  ['avionics_20flight_20software_21',['NULI Avionics Flight Software',['../index.html',1,'']]],
  ['avionics_2eh_22',['Avionics.h',['../Avionics_8h.html',1,'']]],
  ['avoid_20the_20following_3a_23',['AVOID THE FOLLOWING:',['../index.html#autotoc_md33',1,'']]]
];
